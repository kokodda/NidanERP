@using Nidan.Extensions
@model Nidan.Models.EventViewModel

@{
    ViewBag.Title = "Create";
}

<h3>Create</h3>

    <div class="x_panel">
        <div class="x_title">
            <h2>Event <small>create event and then manage</small></h2>
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                </li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <a href="#">Settings 1</a>
                        </li>
                        <li>
                            <a href="#">Settings 2</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a class="close-link"><i class="fa fa-close"></i></a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            @using (@Html.BeginForm("Create", "Event"))
            {
                <div class="form-horizontal form-label-left">
                    
                    <div class="form-control-required-example"> = Required</div>
                    <div class="item form-group">
                        @Html.LabelFor(model=>model.Event.Name,new {@class= "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Event.Name, new { @class = "form-control col-md-7 col-xs-12" })
                            @Html.ValidationMessageFor(model => model.Event.Name, "", new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Event.CentreId, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-4 col-xs-12">
                            @Html.DropDownListFor(model => model.Event.CentreId, Model.Centres, "Select Centre", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Event.CentreId, "", new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Event.EventStartDate, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Event.EventStartDate, "{0:dd MMMM yyyy}", new { @class = "form-control col-md-7 col-xs-12 eventStartDate", ng_model = "model.EventStartDate" })
                            <span class="form-control-feedback" aria-hidden="true"></span>
                            @Html.ValidationMessageFor(model => model.Event.EventStartDate, "", new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Event.EventEndDate, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Event.EventEndDate, "{0:dd MMMM yyyy}", new { @class = "form-control col-md-7 col-xs-12 eventEndDate", ng_model = "model.EventEndDate" })
                            <span class="form-control-feedback" aria-hidden="true"></span>
                            @Html.ValidationMessageFor(model => model.Event.EventEndDate, "", new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Event.Remark, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.EditorFor(model => model.Event.Remark, new { @class = "form-control col-md-7 col-xs-12" })
                            @Html.ValidationMessageFor(model => model.Event.Remark, "", new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-md-offset-8">
                            <button id="send" type="submit" class="btn btn-success">Submit</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
<div>
    <a href="@Url.Action("Index")" class="btn btn-primary" role="button">
        <span class="fa fa-chevron-left"></span>&nbsp;Back to list
    </a>
</div>
@section scripts {
    <script>
        var daterangepickerOptions = {
            autoApply: true,
            singleDatePicker: true,
            showDropdowns: true,
            showCustomRangeLabel: false,
            opens: 'left',
            //minDate: moment(),
            //maxDate: moment().add('2', 'days').format('DD MMMM YYYY'),
            locale: {
                "format": "DD MMMM YYYY"
            }
        };

        jQuery(function () {
            jQuery(".eventStartDate").daterangepicker(daterangepickerOptions);
            $('.eventStartDate').val(moment().format('DD MMMM YYYY'));
            $(".eventStartDate").on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD MMMM YYYY'));
            });

            jQuery(".eventEndDate").daterangepicker(daterangepickerOptions);
            $('.eventEndDate').val(moment().format('DD MMMM YYYY'));
            $(".eventEndDate").on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD MMMM YYYY'));
            });
        });
    </script>
}