@model Nidan.Models.GovernmentMobilizationViewModel
<div class="form-control-required-example"> = Required</div>
<br />
<br />
<div class="form-group name">
    @Html.LabelFor(model => model.GovernmentMobilization.Name, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextBoxFor(model => model.GovernmentMobilization.Name, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.Name, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GovernmentMobilization.FatherName, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextBoxFor(model => model.GovernmentMobilization.FatherName, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.FatherName, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GovernmentMobilization.Mobile, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextBoxFor(model => model.GovernmentMobilization.Mobile, new { @class = "form-control col-md-7 col-xs-12", @onkeypress = "phoneno()", @maxlength = "10" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.Mobile, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GovernmentMobilization.ParentMobile, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextBoxFor(model => model.GovernmentMobilization.ParentMobile, new { @class = "form-control col-md-7 col-xs-12", @onkeypress = "phoneno()", @maxlength = "10" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.ParentMobile, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GovernmentMobilization.DateofBirth, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12 dob">
        @Html.TextBoxFor(model => model.GovernmentMobilization.DateofBirth, "{0:dd MMMM yyyy}", new { @class = "form-control col-md-7 col-xs-12 date", @placeholder = "Date Of Birth" })
        <span class="fa fa-birthday-cake form-control-feedback right" aria-hidden="true"></span>
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.DateofBirth, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GovernmentMobilization.Age, new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextBoxFor(model => model.GovernmentMobilization.Age, new { @class = "form-control", @placeholder = "Age" })
        <span class="fa fa-star form-control-feedback right" aria-hidden="true"></span>
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.Age, "", new { @class = "help-block" })
    </div>
</div>

<label class="control-label col-md-3 col-sm-6 col-xs-12">Gender</label>
<div class="col-md-8 col-sm-8 col-xs-12">
    <div id="gender" class="btn-group" data-toggle="buttons">
        <label class='@(Model.GovernmentMobilization.Gender == "Male" ? "btn btn-default active" : "btn btn-default")' data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
            @Html.RadioButtonFor(model => model.GovernmentMobilization.Gender, "Male")
            <input type="radio" name="gender" value="Male" data-parsley-multiple="gender"> &nbsp; Male &nbsp;
        </label>
        <label class='@(Model.GovernmentMobilization.Gender == "Female" ? "btn btn-default active" : "btn btn-default")' data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
            @Html.RadioButtonFor(model => model.GovernmentMobilization.Gender, "Female")
            <input type="radio" name="gender" value="Female" data-parsley-multiple="gender"> Female
        </label>
    </div>
</div>
<br />
<br />
<br />
<label class="control-label col-md-3 col-sm-6 col-xs-12">Marital Status</label>
<div class="col-md-8 col-sm-8 col-xs-12">
    <div id="gender" class="btn-group" data-toggle="buttons">
        <label class='@(Model.GovernmentMobilization.MaritalStatus == "Married" ? "btn btn-default active" : "btn btn-default")' data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
            @Html.RadioButtonFor(model => model.GovernmentMobilization.MaritalStatus, "Married")
            <input type="radio" name="gender" value="Married" data-parsley-multiple="gender"> &nbsp; Married &nbsp;
        </label>
        <label class='@(Model.GovernmentMobilization.MaritalStatus == "UnMarried" ? "btn btn-default active" : "btn btn-default")' data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
            @Html.RadioButtonFor(model => model.GovernmentMobilization.MaritalStatus, "UnMarried")
            <input type="radio" name="gender" value="UnMarried" data-parsley-multiple="gender"> Un Married
        </label>
    </div>
</div>
<br />
<br />
<br />
<div class="form-group districtId">
    @Html.LabelFor(model => model.GovernmentMobilization.DistrictId, "District", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.DropDownListFor(model => model.GovernmentMobilization.DistrictId, Model.Districts, "Select District", new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.DistrictId, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group districtBlockId">
    @Html.LabelFor(model => model.GovernmentMobilization.DistrictBlockId, "Block", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.DropDownListFor(model => model.GovernmentMobilization.DistrictBlockId, Model.DistrictBlocks, null, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.DistrictBlockId, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group blockPanchayatId">
    @Html.LabelFor(model => model.GovernmentMobilization.BlockPanchayatId, "Panchayat", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.DropDownListFor(model => model.GovernmentMobilization.BlockPanchayatId, Model.BlockPanchayats, null, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.BlockPanchayatId, "", new { @class = "help-block" })
    </div>
</div>
<div class="form-group qualificationId">
    @Html.LabelFor(model => model.GovernmentMobilization.QualificationId, "Qualification", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.DropDownListFor(model => model.GovernmentMobilization.QualificationId, Model.Qualifications, null, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.QualificationId, "", new { @class = "help-block" })
    </div>
</div>
<div class="form-group otherQualification">
    @Html.LabelFor(model => model.GovernmentMobilization.OtherQualification, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextBoxFor(model => model.GovernmentMobilization.OtherQualification, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.OtherQualification, "", new { @class = "help-block" })
    </div>
</div>
<div class="form-group religionId">
    @Html.LabelFor(model => model.GovernmentMobilization.ReligionId, "Religion", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.DropDownListFor(model => model.GovernmentMobilization.ReligionId, Model.Religions, null, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.ReligionId, "", new { @class = "help-block" })
    </div>
</div>
<div class="form-group casteCategoryId">
    @Html.LabelFor(model => model.GovernmentMobilization.CasteCategoryId, "Caste Category", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.DropDownListFor(model => model.GovernmentMobilization.CasteCategoryId, Model.CasteCategories, null, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.CasteCategoryId, "", new { @class = "help-block" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.GovernmentMobilization.SubCaste, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextBoxFor(model => model.GovernmentMobilization.SubCaste, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.SubCaste, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GovernmentMobilization.Remark, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextAreaFor(model => model.GovernmentMobilization.Remark, new { @class = "form-control col-md-7 col-xs-12",@row=2 })
        @Html.ValidationMessageFor(model => model.GovernmentMobilization.Remark, "", new { @class = "help-block" })
    </div>
</div>
