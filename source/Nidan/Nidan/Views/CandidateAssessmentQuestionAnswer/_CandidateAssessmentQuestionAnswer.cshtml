@using Nidan.Entity
@using Nidan.Entity.Dto
@model Nidan.Models.CandidateAssessmentQuestionAnswerViewModel
<div class="form-control-required-example"> = Required</div>
<br />
<br />
@*@foreach (var item in Model.ModuleExamQuestionAnswerGrid.Items.ToList())*@
@for (var a = 1; a < Model.ModuleExamQuestionAnswerGrid.Items.Count(); a++)
{
    <div class="form-group">
        @Html.LabelFor(model => model.QuestionDescription, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @*@Html.LabelFor(model => model.ModuleExamQuestionSet.QuestionDescription, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
            @Model.QuestionDescription
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuestionDescription, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @*@Html.LabelFor(model => model.ModuleExamQuestionSet.QuestionDescription, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
            @Model.QuestionDescription
        </div>
    </div>

    <div class="form-group">
        @Html.Label("", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-7 col-sm-3 col-xs-12">
            <label class="pull-right col-md-6 col-sm-6 col-xs-12">
                @Html.CheckBoxFor(model => model.CandidateAssessmentQuestionAnswer.IsOptionA, new {@class = "col-md-2 col-xs-12", autocomplete = "off"})
                @Model.OptionA
            </label>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-7 col-sm-3 col-xs-12">
            <label class="pull-right col-md-6 col-sm-6 col-xs-12">
                @Html.CheckBoxFor(model => model.CandidateAssessmentQuestionAnswer.IsOptionB, new { @class = "col-md-2 col-xs-12", autocomplete = "off" })
                @Model.OptionB
            </label>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-7 col-sm-3 col-xs-12">
            <label class="pull-right col-md-6 col-sm-6 col-xs-12">
                @Html.CheckBoxFor(model => model.CandidateAssessmentQuestionAnswer.IsOptionC, new { @class = "col-md-2 col-xs-12", autocomplete = "off" })
                @Model.OptionC
            </label>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-7 col-sm-3 col-xs-12">
            <label class="pull-right col-md-6 col-sm-6 col-xs-12">
                @Html.CheckBoxFor(model => model.CandidateAssessmentQuestionAnswer.IsOptionD, new { @class = "col-md-2 col-xs-12", autocomplete = "off" })
                @Model.OptionD
            </label>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ModuleExamQuestionSet.SubjectiveAnswer, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-6 col-sm-6 col-xs-12">
            @Html.TextBoxFor(model => model.ModuleExamQuestionSet.SubjectiveAnswer, null, new { @class = "form-control col-md-7 col-xs-12" })
            @Html.ValidationMessageFor(model => model.ModuleExamQuestionSet.SubjectiveAnswer, "", new { @class = "help-block" })
        </div>
    </div>

}

@*<div class="col-xs-12">
    @Html.Partial("Pagination/_pageSize")
</div>*@